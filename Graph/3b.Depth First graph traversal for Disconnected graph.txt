import java.util.*;

class Graph {

    static void addEdge(ArrayList<ArrayList<Integer>> adj, int u, int v) {
        adj.get(u).add(v);
        adj.get(v).add(u);
    }

    public static void main(String[] args) {
        int V = 7;
        ArrayList<ArrayList<Integer>> adj = new ArrayList<ArrayList<Integer>>(V);

        for (int i = 0; i < V; i++)
            adj.add(new ArrayList<Integer>());

        addEdge(adj, 0, 1);
        addEdge(adj, 0, 2);
        addEdge(adj, 1, 2);
        addEdge(adj, 2, 3);
        addEdge(adj, 1, 3);

        addEdge(adj, 4, 5);
        addEdge(adj, 4, 6);
        addEdge(adj, 5, 6);

        System.out.println("Following is Depth First Traversal: ");
        DFS(adj, 7);
    }

    public static void DFS(ArrayList<ArrayList<Integer>> graph, int totalVertices ) {
        boolean[] visited = new boolean[totalVertices];
        for (int i = 0; i < totalVertices; i++)
            if (visited[i] == false)
                DFSRec(graph, i, visited);
    }

    public static void DFSRec(ArrayList<ArrayList<Integer>> graph, int s, boolean[] visited) {
        visited[s] = true;
        System.out.print(s + " ");
        for (int u : graph.get(s)) {
            if (visited[u] == false)
                DFSRec(graph, u, visited);
        }
    }
}

