public class Node {
    int key;
    Node left;
    Node right;

    public Node(int data) {
        key = data;
        left = null;
        right = null;
    }

}
////////////////////////////////////////////////////////////////////////////////

public class Main {
    public static void main(String[] args) {
        //create a Binary search tree
        Node root = new Node(15);
        root.right = new Node(20);
        root.right.left = new Node(18);
        root.right.right = new Node(80);
        root.right.left.left = new Node(16);
        root.left = new Node(5);
        root.left.left = new Node(3);

        //delete key in BST
        deleteKey(root, 18);
    }

    public static Node deleteKey(Node root, int x) {
        if (root == null)
            return null;
        if (root.key < x)
            root.right = deleteKey(root.right, x);
        else if (root.key > x)
            root.left = deleteKey(root.left, x);
        else {
            if (root.left == null)
                return root.right;
            else if (root.right == null)
                return root.left;
            else {
                Node succ = getSucc(root);
                root.key = succ.key;
                root.right = deleteKey(root.right, succ.key);
            }
        }
        return root;
    }

    public static Node getSucc(Node curr) {
        curr = curr.right;
        while (curr != null && curr.left != null)
            curr = curr.left;
        return curr;
    }

}
