public class Node {
    int data;
    Node next;

    public Node(int n){
       this.data = n;
       this.next=null;
    }
}
////////////////////////////////////////////////////////////////////////////////
public class MyStack {
    Node head;
    int size;

    public MyStack() {
        Node head = null;
        size = 0;
    }

    public int getSize() {
        return this.size;
    }

    public boolean isEmpty() {
        return head == null;
    }

    public void push(int data) {
        Node n = new Node(data);
        n.next=head;
        head=n;
        size++;
    }

    public int pop() {
        if (head == null) {
            return Integer.MAX_VALUE;
        }
        Node temp;
        temp=head;
        head = head.next;
        size--;
        return temp.data;
    }

    public int peek(){
        if(head==null)
            return Integer.MAX_VALUE;
        return head.data;
    }
}
////////////////////////////////////////////////////////////////////////////////
public class Main {
    public static void main(String[] args) {
        MyStack s = new MyStack(); s.push(10);
        s.push(20);
        s.push(30);
        System.out.println(s.peek());
        System.out.println(s.pop());
        System.out.println(s.getSize());
        s.push(40);
        System.out.println(s.getSize());
        System.out.println(s.isEmpty());
    }

}
