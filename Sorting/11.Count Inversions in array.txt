public class Main {
    public static void main(String[] args) {
        int[] arr = {2, 4, 1, 3, 5};
        int count = countInversionsInArray(arr, 0, arr.length - 1);
        System.out.println(count);
    }

    public static int countInversionsInArray(int a[], int low, int high) {
        int res = 0;
        if (high > low) {
            int m = (low + high) / 2;
            res += countInversionsInArray(a, low, m);
            res += countInversionsInArray(a, m + 1, high);
            res += mergeAndCount(a, low, m, high);
        }
        return res;
    }

    public static int mergeAndCount(int arr[], int low, int mid, int high) {
        int res = 0;
        int m = mid - low + 1;
        int n = high - mid;
        int[] left = new int[m];
        int[] right = new int[n];
        for (int i = 0; i < m; i++)
            left[i] = arr[i+low];
        for (int i = 0; i < n; i++)
            right[i] = arr[i + mid + 1];
        int i = 0;
        int j = 0;
        int k = low;
        while (i < m && j < n) {
            if (left[i] <= right[j]) {
                arr[k] = left[i];
                i++;
            } else if (left[i] > right[j]) {
                arr[k] = right[j];
                j++;
                res += m - i;
            }
            k++;
        }
        while (i < m) {
            arr[k] = left[i];
            i++;
            k++;
        }
        while (j < n) {
            arr[k] = right[j];
            j++;
            k++;
        }
        return res;
    }
}
